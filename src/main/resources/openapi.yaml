openapi: 3.0.1
info:
  title: Api ViveLibre
  description: Esta API se encarga de manejar la información que se encuentra en el JSON de Books.
  version: 1.0.0
servers: 
- url: http://localhost:8080
tags:
- name: books
  description: Este endpoint maneja toda la información relacionada con los libros.
  
paths:
  /longBooksAndHarryName:
    get:
      summary: Obtener todos los libros
      operationId: getLongBooksAndHarryName
      responses:
        "200":
          description: Lista de libros obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Error interno del servidor.
          
  /booksByJKRowling:
    get:
      summary: Obtener todos los libros
      operationId: getBooksByJKRowling
      responses:
        "200":
          description: Lista de libros obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Error interno del servidor.
          
  /sortAndBooksNumberByAuthor:
    get:
      summary: Obtener todos los libros
      operationId: getSortAndBooksNumber
      responses:
        "200":
          description: Lista de libros obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Error interno del servidor.
          
  /dateFormatter:
    put:
      summary: Obtener todos los libros
      operationId: getBooksDateFormatter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
      responses:
        "200":
          description: Lista de libros obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Error interno del servidor.
          
  /calculatePageStats:
    get:
      summary: Obtener todos los libros
      operationId: getCalculatePageStats
      responses:
        "200":
          description: Lista de libros obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Error interno del servidor.
          
  /booksByAuthor:
    get:
      summary: Obtener todos los libros
      operationId: getBooksByAuthor
      responses:
        "200":
          description: Lista de libros obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Error interno del servidor.

  /authorDuplicatedAndNotTimestamp:
    get:
      summary: Obtener todos los libros
      operationId: getAuthorDuplicatedAndNotTimestamp
      responses:
        "200":
          description: Lista de libros obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Error interno del servidor.

  /newestBooks:
    get:
      summary: Obtener todos los libros
      operationId: getNewestBooks
      responses:
        "200":
          description: Lista de libros obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Error interno del servidor.
          
components:
  schemas:
    Author:
      type: object
      properties:
        name:
          type: string
        firstSurname:
          type: string
        bio:
          type: string
    
    Book:
      type: object
      properties:
        id:
          type: integer
        title: 
          type: string
        publicationTimestamp:
          type: string
        pages:
          type: integer
        wordCount:
          type: integer
        summary:
          type: string
        author:
          $ref: "#/components/schemas/Author"
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        

